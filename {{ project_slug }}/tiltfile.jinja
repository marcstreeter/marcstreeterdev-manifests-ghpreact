# {{ project_name }} service Tiltfile (development only)
load('ext://configmap', 'configmap_from_dict')
load('ext://dotenv', 'dotenv')

# CONSTANTS
DOTENV = dotenv() or {}
SYSENV = dict(os.environ)

# FUNCTIONS
def get_env_var(key, default=""):
    """Get environment variable with priority: dotenv > system env > default"""
    return DOTENV.get(key, SYSENV.get(key, default))

# Create ConfigMap for frontend environment variables
k8s_yaml(
    configmap_from_dict(
        '{{ project_slug }}-config',
        inputs={
            'VITE_API_BASE_URL': get_env_var('VITE_API_BASE_URL', 'http://localhost:18800'),
            'VITE_APP_VERSION': get_env_var('VITE_APP_VERSION', '1.0.0'),
        }
    )
)

# Build the dev Docker image
# Assumes Dockerfile is set up for development (Vite dev server)
docker_build(
    '{{ project_slug }}-app',
    '.',
    dockerfile='Dockerfile',
    live_update=[
        sync('./src', '/app/src'),
    ]
)

# Load only this service's manifests (for dev, if you want to use k8s locally)
k8s_yaml(helm('manifests', values=['manifests/values-dev.yaml']))

# Define the frontend resource
k8s_resource(
    '{{ project_slug }}',
    # HOST:PORT, CONTAINER:PORT
    port_forwards=[
        port_forward({{ tilt_app_port }}, {{ app_port }}, name="{{ project_slug }}-dev"),
        port_forward({{ tilt_storybook_port }}, {{ storybook_port }}, name="{{ project_slug }}-storybook"),
    ],
    resource_deps=[],
    labels=['frontend'],
    links=[
        link('http://localhost:{{ tilt_app_port }}', 'React App'),
        link('http://localhost:{{ tilt_storybook_port }}', 'Storybook'),
    ],
) 